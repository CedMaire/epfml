import numpy as np

"""
Functions related to computing the cost and loss.
"""

def calculate_mse(e):
    """
    Computes the Mean Square Error.

    :param e: numpy array of errors
    :returns: the mean square error over the input array
    """

    return (1/2) * np.mean(np.square(e))

def calculate_mae(e):
    """
    Computes the Mean Absolute Error.

    :param e: numpy array of errors
    :returns: the mean absolute error over the input array
    """

    return np.mean(np.abs(e))

def compute_loss(y, tx, w, mse=True):
    """
    Computes the loss generated by applying the given weight vector to the data set and comparing the result to the
    expected labels.

    :param y: the expected labels
    :param tx: the data set (rows are samples, columns are features)
    :param w: the weight vector
    :param mse: (optional) if True computes the loss using MSE else using MAE
    :returns: the loss generated by applying the given weight vector
    """

    err = y - tx.dot(w)
    if mse:
        return calculate_mse(err)
    else:
        return calculate_mae(err)
